/*
Test generated by RoostGPT for test Aayushree-Test using AI Type Open AI and AI Model gpt-4

1. Scenario: Valid Latitude and Longitude
   Description: Pass valid latitude and longitude values to the LatLonCoordinate function and check if it correctly assigns these values to the respective instance variables.

2. Scenario: Invalid Latitude
   Description: Pass an invalid latitude value (greater than 90 or less than -90) to the LatLonCoordinate function and check if it throws an error or handles the scenario correctly.

3. Scenario: Invalid Longitude
   Description: Pass an invalid longitude value (greater than 180 or less than -180) to the LatLonCoordinate function and check if it throws an error or handles the scenario correctly.

4. Scenario: Latitude and Longitude as Zero 
   Description: Pass both latitude and longitude values as zero to the LatLonCoordinate function and check if it correctly assigns these values.

5. Scenario: Negative Latitude and Longitude
   Description: Pass negative values of latitude and longitude to the LatLonCoordinate function and check if it correctly assigns these values.

6. Scenario: Latitude and Longitude as Maximum Positive Values
   Description: Pass maximum positive values of latitude (90) and longitude (180) to the LatLonCoordinate function and check if it correctly assigns these values.

7. Scenario: Latitude and Longitude as Maximum Negative Values
   Description: Pass maximum negative values of latitude (-90) and longitude (-180) to the LatLonCoordinate function and check if it correctly assigns these values.

8. Scenario: Passing Null Values
   Description: Pass null values for both latitude and longitude to the LatLonCoordinate function and check if it throws a null pointer exception or handles the scenario correctly.

9. Scenario: Large Numbers for Latitude and Longitude
   Description: Pass very large numbers for latitude and longitude that are beyond the valid range and check how the function handles this scenario.

10. Scenario: Small Floating Point Numbers for Latitude and Longitude
    Description: Pass very small floating point numbers for latitude and longitude and check if the function correctly assigns these values.
*/
import org.springframework.boot;
import org.apache.commons;
import org.postgresql;
import org.projectlombok;
import com.opencsv;

public class LatLonCoordinate {

    private final double latitude;
    private final double longitude;

    public LatLonCoordinate() {
        latitude = 0.0;
        longitude = 0.0;
    }

    public SVY21Coordinate asSVY21() {
        return SVY21.computeSVY21(this);
    }

    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        LatLonCoordinate other = (LatLonCoordinate) obj;
        if (Double.doubleToLongBits(latitude) != Double.doubleToLongBits(other.latitude)) {
            return false;
        }
        if (Double.doubleToLongBits(longitude) != Double.doubleToLongBits(other.longitude)) {
            return false;
        }
        return true;
    }

    public double getLatitude() {
        return latitude;
    }

    public double getLongitude() {
        return longitude;
    }

    public String toString() {
        return "LatLonCoordinate [latitude=" + latitude + ", longitude=" + longitude + "]";
    }
}
